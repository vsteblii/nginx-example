worker_processes auto;

events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/includes/mime.conf;
    include /etc/nginx/includes/gzip.conf;

    server {
        listen 80;
        index index.html;
        # you can update you etc/hosts file to use any domain for testing
        server_name mm.test mmm.test;
        root /var/www/html;

        error_log /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;

        location ~ /avatars {
            expires 14d;
            try_files $uri /examples/unknown.jpg;
        }

        location ~ \.(js|css|png|jpg|jpeg|gif|swf|ico|pdf|mov|fla|zip|rar|svg|json)$ {
            expires max;
        }

        location ~* \.(git|rb|inc|ht|yml|env|gitignore|gitattributes|log)$ {
            deny all;
        }

        location ~ /css {
            gzip_comp_level 6;
            expires max;
        }

        error_page 404 /error.html;

        # It is trick to redirect all requests to
        # maintenance page if there is 'maintenance.enable' file in root
        location / {
            if (-f $document_root/maintenance.enable) {
                return 503;
            }
        }
        error_page 503 @maintenance;
        location @maintenance {
            rewrite ^(.*)$ /maintenance.html break;
        }

        location /api {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://node:3000;
        }

        # It is just example of how to configure redirect to PHP server
        #     location ~ \.php$ {
        #         include fastcgi_params;
        #         #include fastcgi.conf;
        #         fastcgi_pass php:9000;
        #         try_files $uri = 404;
        #         fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #         fastcgi_index index.php;
        #         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #         fastcgi_param PATH_INFO $fastcgi_path_info;
        #         #fastcgi_cache fastcgicache;
        #         #fastcgi_cache_valid 200 10m;
        #         #fastcgi_cache_bypass $no_cache;
        #         #fastcgi_no_cache $no_cache;
        #         #fastcgi_hide_header "Set-Cookie";
        #     }
    }
}
